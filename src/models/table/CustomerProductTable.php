<?php

namespace modava\customer\models\table;

use cheatsheet\Time;
use common\models\User;
use modava\customer\models\query\CustomerProductQuery;
use Yii;
use yii\db\ActiveRecord;

class CustomerProductTable extends \yii\db\ActiveRecord
{
    const STATUS_DISABLED = 0;
    const STATUS_PUBLISHED = 1;

    public static function tableName()
    {
        return 'customer_product';
    }

    public static function find()
    {
        return new CustomerProductQuery(get_called_class());
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-customer-product-get-by-id-' . $this->id . '-' . $this->language,
            'redis-customer-product-get-all-' . $this->language
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-customer-product-get-by-id-' . $this->id . '-' . $this->language,
            'redis-customer-product-get-all-' . $this->language
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function getCategoryHasOne()
    {
        return $this->hasOne(CustomerProductCategoryTable::class, ['id' => 'category_id']);
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserCreated()
    {
        return $this->hasOne(User::class, ['id' => 'created_by']);
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserUpdated()
    {
        return $this->hasOne(User::class, ['id' => 'updated_by']);
    }

    public static function getById($id, $language = null)
    {
        $language = $language ?: Yii::$app->language;
        $cache = Yii::$app->cache;
        $key = 'redis-customer-product-get-by-id-' . $id . '-' . $language;
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->where([self::tableName() . '.id' => $id, self::tableName() . '.language' => $language]);
            $data = $query->one();
            $cache->set($key, $data);
        }
        return $data;
    }

    public static function getAll($language = null)
    {
        $language = $language ?: Yii::$app->language;
        $cache = Yii::$app->cache;
        $key = 'redis-customer-product-get-all-' . $language;
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->where([self::tableName() . '.language' => $language]);
            $data = $query->all();
            $cache->set($key, $data);
        }
        return $data;
    }
}
