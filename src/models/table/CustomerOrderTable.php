<?php

namespace modava\customer\models\table;

use cheatsheet\Time;
use modava\customer\models\query\CustomerOrderQuery;
use modava\product\models\table\ProductTable;
use Yii;
use yii\db\ActiveRecord;

class CustomerOrderTable extends \yii\db\ActiveRecord
{
    const STATUS_DISABLED = 0;
    const STATUS_PUBLISHED = 1;

    public static function tableName()
    {
        return 'customer_order';
    }

    public static function find()
    {
        return new CustomerOrderQuery(get_called_class());
    }

    public function getOrderDetailHasMany()
    {
        return $this->hasMany(CustomerOrderDetailTable::class, ['order_id' => 'id']);
    }

    public function getPaymentHasMany()
    {
        return $this->hasMany(CustomerPaymentTable::class, ['order_id' => 'id']);
    }

    public function getCustomerHasOne()
    {
        return $this->hasOne(CustomerTable::class, ['id' => 'customer_id']);
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-customer-order-table-get-order-un-finish-by-customer-' . $this->customer_id,
            'redis-customer-order-table-get-by-id-' . $this->id
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-customer-order-table-get-order-un-finish-by-customer-' . $this->customer_id,
            'redis-customer-order-table-get-by-id-' . $this->id
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public static function getOrderUnFinishByCustomer($customer_id)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-customer-order-table-get-order-un-finish-by-customer-' . $customer_id;
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->where([self::tableName() . '.customer_id' => $customer_id, self::tableName() . '.status' => self::STATUS_DISABLED]);
            $data = $query->all();
            $cache->set($key, $data);
        }
        return $data;
    }

    public static function getById($id)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-customer-order-table-get-by-id-' . $id;
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->joinWith(['orderDetailHasMany', 'paymentHasMany'])->where([self::tableName() . '.id' => $id]);
            $data = $query->one();
            $cache->set($key, $data);
        }
        return $data;
    }
}
